#!/usr/bin/env ruby
# encoding: utf-8

module Sword
  require File.dirname(__FILE__) + '/../lib/sword'
  require 'optparse'
  options = {}

  OptionParser.new do |o|
    o.summary_width = 18
    #o.on('-b', '--build <file>', 'Build project into zip/folder') { Application.export!(options) }
    o.on('--debug', 'Show server’s guts') { options[:debug] = true }
    o.on('-d', '--dir <name>', 'Specify watch directory') { |name| options[:directory] = name }
    unless Misc.windows?
      o.on('-g', '--gem <name>', 'Add a gem to require') { |name| open(REQUIRED, 'a') { |f| f.puts name }; puts "`#{g}` will be loaded next time you run Sword."; exit }
      o.on('-h', '--help', 'Print this message') { puts o; exit }
      o.on('-i', '--install', 'Try to install must-have gems') { exec 'gem install ' + PARSE[:gems].map { |n| n.respond_to?(:first) ? n.first : n }.delete_if { |g| g['/'] } * ' '; exit }
    end
    o.on('-m', '--manual <x,y>', 'Specify gems to require') { |gems| gems.each { |g| require g }; options[:unload] = true }
    #o.on('-o', '--out <file>', 'Specify log file') { |file| options[:out] = file }
    o.on('-p', '--port <num>', 'Change the port, 1111 by default') { |num| options[:port] = num }
    o.on('-s', '--silent', 'Try to turn off any messages') { options[:silent] = true }
    o.on('-u', '--unload', 'Skip heuristically loading gems') { options[:unload] = true }
    o.on('-v', '--version', 'Print Sword’s version') { puts 'Sword ' + VERSION; exit }
    if Misc.windows? and ARGV.empty?
      [:INT, :TERM].each { |s| trap(s) { abort "\n" } }
      o.banner = 'Options (press ENTER if none):'
      print o, "\n"
      @stdin = gets.split
    end
  end.parse!(@stdin || ARGV)
  Application.run!(options)
end
